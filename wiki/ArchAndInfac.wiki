#summary Architecture and Interface

= Architecture =

a server has:
  * multiple endpoints (ipv4, ipv6, etc.)
  * multiple nodes
  * multiple handlers

an endpoint has:
  * multiple bindings <host, node>
  * single optional default (wildcard) binding
  * single optional proxy

a node has:
  * multiple bindings <name, node>
  * single optional filesystem path
  * multiple bindings <extension, handler>
  * single optional default handler
  * single optional error handler

a handler is a component implements an specified interface, which can be (at least):
  * raw handler (fetch raw data from filesystem and send through)
  * fastcgi handler (invoke fastcgi application)

= Interface =

this section is deprecated and is about to change

== node ==

  * parse(node, parse_context, request) -> node

== handler ==

  * handle(handler, request) -> response

== request ==

  * rel_url: string
  * get_header(request, name) -> value
  * set_header(request, name, value)
  * ???

== response ==

  * write_header(response, http_code, ???)
  * write(response, buffer, size)
  * where does write_chunk belong ???